spring:
  application:
    name: u-product
  jackson:
    serializazion:
      WRITE_DATES_AS_TIMESTAMPS : false
  data:
    rest:
      base-path: /api
---
# h2 : profile to be handle in dev only
#      it provides a quick reference for the entities
#      it does nothing more that loading the database with a specific bean in the Application
spring:
  profiles: h2
server:
  port: 9000
cors:
  pattern: "/api/**"
  origin: "http://localhost:8080"
  methods: "*"
  headers: "*"
---
# prostgresql : profile to be used in dev only
#               it needs a running local instance of the database
#               this profile needs one of the following to specify
#               the verb (strategy) to use on ddl generation
spring:
  profiles: postgresql
  datasource:
      username: jlg
      password: peakyblinders
      platform: POSTGRESQL
cors:
  pattern: "/api/**"
  origin: "http://localhost:8080"
  methods: "*"
  headers: "*"
---
# ddl-create : profile to be used in dev only
#              to create the database by scratch
#              it loads the database with a specific bean in the Application
spring:
  profiles: ddl-create
  jpa:
    hibernate:
      ddl-auto: create
---
# ddl-validate : profile to be used in dev only
#              to keep the database as is
spring:
  profiles: ddl-validate
  jpa:
    hibernate:
      ddl-auto: validate
---
# heroku : profile to be used in production
#          the database behaviour is specified by environment variables
spring:
  profiles: heroku
  datasource:
      url: ${JDBC_DATABASE_URL}
      username: ${JDBC_DATABASE_USERNAME}
      password: ${JDBC_DATABASE_PASSWORD}
cors:
  pattern: ${CORS_BASE_PATTERN}
  origin:  ${ALLOWED_ORIGIN}
  methods: ${ALLOWED_HEADERS}
  headers: ${ALLOWED_METHODS}